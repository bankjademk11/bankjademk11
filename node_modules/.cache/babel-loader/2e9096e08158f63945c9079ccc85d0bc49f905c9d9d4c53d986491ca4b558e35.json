{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tiantian\\\\my-project\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Header, Navigation, MessageDisplay, FoodForm, FoodList, CategoryFilter, VotingSection, DailyWinner, AdminDashboard } from './components'; // Importing from the index.js barrel file\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  // State for current page view: 'my_foods', 'vote', 'admin'\n  const [currentPage, setCurrentPage] = useState('my_foods');\n\n  // User ID for offline voting (persists per browser session)\n  const [userId, setUserId] = useState(() => {\n    let id = localStorage.getItem('offlineUserId');\n    if (!id) {\n      id = crypto.randomUUID();\n      localStorage.setItem('offlineUserId', id);\n    }\n    return id;\n  });\n\n  // Simple admin state for offline demo (not secure for real apps)\n  const [isAdmin, setIsAdmin] = useState(false);\n  const [adminPasswordInput, setAdminPasswordInput] = useState('');\n  const ADMIN_PASSWORD = 'admin'; // Hardcoded admin password for demo\n\n  // State to store the list of food items (user's private list)\n  const [foodItems, setFoodItems] = useState(() => {\n    const savedFoodItems = localStorage.getItem('thaiFoodMenu_foodItems');\n    return savedFoodItems ? JSON.parse(savedFoodItems) : [{\n      id: '1',\n      name: 'ผัดไทย',\n      image: 'https://placehold.co/400x300/FFD700/000000?text=Pad+Thai',\n      tags: ['อาหารจานเดียว', 'เส้น', 'ยอดนิยม', 'ทั่วไป']\n    }, {\n      id: '2',\n      name: 'ต้มยำกุ้ง',\n      image: 'https://placehold.co/400x300/FF6347/FFFFFF?text=Tom+Yum+Goong',\n      tags: ['ซุป', 'เผ็ด', 'อาหารทะเล', 'ทั่วไป']\n    }, {\n      id: '3',\n      name: 'แกงเขียวหวาน',\n      image: 'https://placehold.co/400x300/32CD32/FFFFFF?text=Green+Curry',\n      tags: ['แกง', 'กะทิ', 'เผ็ดน้อย', 'ทั่วไป']\n    }, {\n      id: '4',\n      name: 'ข้าวผัด',\n      image: 'https://placehold.co/400x300/87CEEB/000000?text=Fried+Rice',\n      tags: ['อาหารจานเดียว', 'ข้าว', 'ง่ายๆ', 'ทั่วไป']\n    }, {\n      id: '5',\n      name: 'ส้มตำ',\n      image: 'https://placehold.co/400x300/FF4500/FFFFFF?text=Som+Tum',\n      tags: ['สลัด', 'เผ็ด', 'อีสาน', 'ทั่วไป']\n    }, {\n      id: '6',\n      name: 'มัสมั่นไก่',\n      image: 'https://placehold.co/400x300/8B4513/FFFFFF?text=Massaman+Curry',\n      tags: ['แกง', 'กะทิ', 'ไม่เผ็ด', 'ทั่วไป']\n    }, {\n      id: '7',\n      name: 'ราดหน้าหมู',\n      image: 'https://placehold.co/400x300/90EE90/000000?text=Rad+Na+Moo',\n      tags: ['อาหารจานเดียว', 'เส้น', 'อาหารราดหน้า']\n    }, {\n      id: '8',\n      name: 'ก๋วยเตี๋ยวเรือ',\n      image: 'https://placehold.co/400x300/DDA0DD/FFFFFF?text=Boat+Noodle',\n      tags: ['อาหารจานเดียว', 'เส้น']\n    }];\n  });\n\n  // State for the daily menu/voting status (public, stored in localStorage)\n  const [dailyMenu, setDailyMenu] = useState(() => {\n    const savedDailyMenu = localStorage.getItem('thaiFoodMenu_dailyMenu');\n    return savedDailyMenu ? JSON.parse(savedDailyMenu) : {\n      status: 'idle',\n      // 'idle', 'voting', 'closed', 'admin_set'\n      voteOptions: [],\n      votedUsers: {},\n      // { userId: foodItemId }\n      winningFoodItemId: null,\n      adminSetFoodItemId: null,\n      timestamp: null\n    };\n  });\n\n  // State for the form inputs (for adding/editing food items)\n  const [foodName, setFoodName] = useState('');\n  const [foodImage, setFoodImage] = useState('');\n  const [foodTags, setFoodTags] = useState('');\n  const [editingFoodId, setEditingFoodId] = useState(null);\n\n  // State for admin panel: selected items for voting (stores full food objects)\n  const [adminVoteSelections, setAdminVoteSelections] = useState([]);\n  const [adminDirectSelectFoodId, setAdminDirectSelectFoodId] = useState('');\n\n  // State for filtering food items in 'my_foods' page\n  const [selectedCategory, setSelectedCategory] = useState('ทั้งหมด'); // 'ทั้งหมด', 'อาหารราดหน้า', 'ทั่วไป', 'เส้น'\n  // State for filtering food items in 'admin' page\n  const [selectedAdminCategory, setSelectedAdminCategory] = useState('ทั้งหมด'); // 'ทั้งหมด', 'อาหารราดหน้า', 'ทั่วไป', 'เส้น'\n\n  // State for showing success/error messages\n  const [message, setMessage] = useState({\n    text: '',\n    type: ''\n  });\n\n  // --- Effects to save data to Local Storage ---\n  useEffect(() => {\n    localStorage.setItem('thaiFoodMenu_foodItems', JSON.stringify(foodItems));\n  }, [foodItems]);\n  useEffect(() => {\n    localStorage.setItem('thaiFoodMenu_dailyMenu', JSON.stringify(dailyMenu));\n  }, [dailyMenu]);\n\n  // --- CRUD Operations for Food Items (using localStorage) ---\n  const handleAddOrUpdateFood = e => {\n    e.preventDefault();\n    if (!foodName.trim() || !foodImage.trim()) {\n      showMessage('กรุณากรอกชื่อและรูปภาพอาหาร', 'error');\n      return;\n    }\n    const tagsArray = foodTags.split(',').map(tag => tag.trim()).filter(tag => tag !== '');\n    if (editingFoodId) {\n      // Update existing food item\n      setFoodItems(foodItems.map(item => item.id === editingFoodId ? {\n        ...item,\n        name: foodName,\n        image: foodImage,\n        tags: tagsArray\n      } : item));\n      showMessage('อัปเดตเมนูอาหารเรียบร้อยแล้ว!', 'success');\n      setEditingFoodId(null);\n    } else {\n      // Add new food item\n      const newFoodItem = {\n        id: Date.now().toString(),\n        // Unique ID based on timestamp\n        name: foodName,\n        image: foodImage,\n        tags: tagsArray\n      };\n      setFoodItems([...foodItems, newFoodItem]);\n      showMessage('เพิ่มเมนูอาหารเรียบร้อยแล้ว!', 'success');\n    }\n\n    // Clear form fields\n    setFoodName('');\n    setFoodImage('');\n    setFoodTags('');\n  };\n  const handleEditFood = id => {\n    const foodToEdit = foodItems.find(item => item.id === id);\n    if (foodToEdit) {\n      setFoodName(foodToEdit.name);\n      setFoodImage(foodToEdit.image);\n      setFoodTags(foodToEdit.tags.join(', '));\n      setEditingFoodId(id);\n      showMessage('กำลังแก้ไขเมนูอาหาร...', 'info');\n    }\n  };\n  const handleDeleteFood = id => {\n    if (window.confirm('คุณต้องการลบเมนูอาหารนี้หรือไม่?')) {\n      setFoodItems(foodItems.filter(item => item.id !== id));\n      showMessage('ลบเมนูอาหารเรียบร้อยแล้ว!', 'success');\n    }\n  };\n\n  // --- Admin Functions (using localStorage) ---\n  const handleAdminLogin = () => {\n    if (adminPasswordInput === ADMIN_PASSWORD) {\n      setIsAdmin(true);\n      showMessage('เข้าสู่ระบบแอดมินสำเร็จ!', 'success');\n    } else {\n      showMessage('รหัสผ่านแอดมินไม่ถูกต้อง', 'error');\n    }\n    setAdminPasswordInput('');\n  };\n  const handleAdminLogout = () => {\n    setIsAdmin(false);\n    showMessage('ออกจากระบบแอดมินแล้ว', 'info');\n  };\n\n  // Toggle selection for voting in admin panel\n  const toggleAdminVoteSelection = food => {\n    const isSelected = adminVoteSelections.some(item => item.id === food.id);\n    if (isSelected) {\n      setAdminVoteSelections(adminVoteSelections.filter(item => item.id !== food.id));\n    } else {\n      if (adminVoteSelections.length < 5) {\n        setAdminVoteSelections([...adminVoteSelections, food]);\n      } else {\n        showMessage('เลือกได้สูงสุด 5 เมนูสำหรับโหวตเท่านั้น', 'info');\n      }\n    }\n  };\n  const handleStartVoting = () => {\n    if (adminVoteSelections.length !== 5) {\n      showMessage('ต้องเลือก 5 เมนูที่ไม่ซ้ำกันสำหรับโหวต', 'error');\n      return;\n    }\n    const voteOptions = adminVoteSelections.map(item => ({\n      foodItemId: item.id,\n      name: item.name,\n      image: item.image,\n      votes: 0\n    }));\n    setDailyMenu({\n      status: 'voting',\n      voteOptions: voteOptions,\n      votedUsers: {},\n      // Reset voted users\n      winningFoodItemId: null,\n      adminSetFoodItemId: null,\n      timestamp: new Date().toISOString()\n    });\n    showMessage('เริ่มการโหวตเมนูประจำวันแล้ว!', 'success');\n    setAdminVoteSelections([]); // Clear selected items after starting vote\n  };\n  const handleCloseVoting = () => {\n    if (dailyMenu.status !== 'voting') {\n      showMessage('ไม่ได้อยู่ในสถานะกำลังโหวต', 'error');\n      return;\n    }\n    let winningItem = null;\n    if (dailyMenu.voteOptions && dailyMenu.voteOptions.length > 0) {\n      winningItem = dailyMenu.voteOptions.reduce((prev, current) => prev.votes > current.votes ? prev : current);\n    }\n    setDailyMenu(prev => ({\n      ...prev,\n      status: 'closed',\n      winningFoodItemId: winningItem ? winningItem.foodItemId : null,\n      timestamp: new Date().toISOString()\n    }));\n    showMessage(`ปิดการโหวตแล้ว! เมนูที่ชนะคือ ${winningItem ? winningItem.name : 'ไม่มี'}`, 'success');\n  };\n  const handleAdminSetFood = () => {\n    if (!adminDirectSelectFoodId) {\n      showMessage('ต้องเลือกเมนู', 'error');\n      return;\n    }\n    setDailyMenu({\n      status: 'admin_set',\n      adminSetFoodItemId: adminDirectSelectFoodId,\n      winningFoodItemId: null,\n      voteOptions: [],\n      votedUsers: {},\n      timestamp: new Date().toISOString()\n    });\n    showMessage('ตั้งค่าเมนูประจำวันโดยแอดมินเรียบร้อยแล้ว!', 'success');\n    setAdminDirectSelectFoodId('');\n  };\n\n  // --- User Voting Function (using localStorage) ---\n  const handleVote = foodItemId => {\n    if (dailyMenu.status !== 'voting') {\n      showMessage('ไม่สามารถโหวตได้ในขณะนี้', 'error');\n      return;\n    }\n\n    // Check if user has already voted\n    if (dailyMenu.votedUsers && dailyMenu.votedUsers[userId]) {\n      showMessage('คุณโหวตไปแล้วสำหรับวันนี้!', 'info');\n      return;\n    }\n\n    // Update the vote count for the selected item and mark user as voted\n    const updatedVoteOptions = dailyMenu.voteOptions.map(option => option.foodItemId === foodItemId ? {\n      ...option,\n      votes: option.votes + 1\n    } : option);\n    setDailyMenu(prev => ({\n      ...prev,\n      voteOptions: updatedVoteOptions,\n      votedUsers: {\n        ...prev.votedUsers,\n        [userId]: foodItemId // Mark user as voted for this item\n      },\n      timestamp: new Date().toISOString()\n    }));\n    showMessage('โหวตสำเร็จ!', 'success');\n  };\n\n  // Function to display messages\n  const showMessage = (text, type) => {\n    setMessage({\n      text,\n      type\n    });\n    setTimeout(() => {\n      setMessage({\n        text: '',\n        type: ''\n      }); // Clear message after 3 seconds\n    }, 3000);\n  };\n\n  // Get winning food item details for display\n  const getWinningFoodDetails = () => {\n    if (!dailyMenu) return null;\n    if (dailyMenu.status === 'closed' && dailyMenu.winningFoodItemId) {\n      return foodItems.find(item => item.id === dailyMenu.winningFoodItemId) || dailyMenu.voteOptions.find(option => option.foodItemId === dailyMenu.winningFoodItemId);\n    } else if (dailyMenu.status === 'admin_set' && dailyMenu.adminSetFoodItemId) {\n      return foodItems.find(item => item.id === dailyMenu.adminSetFoodItemId);\n    }\n    return null;\n  };\n  const winningFood = getWinningFoodDetails();\n\n  // Filtered food items for 'my_foods' section\n  const filteredFoodItems = foodItems.filter(food => {\n    if (selectedCategory === 'ทั้งหมด') {\n      return true;\n    }\n    return food.tags.includes(selectedCategory);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen p-4 text-gray-800 bg-gradient-to-br from-emerald-50 to-teal-100 font-inter\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      userId: userId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MessageDisplay, {\n      message: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Navigation, {\n      currentPage: currentPage,\n      setCurrentPage: setCurrentPage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 7\n    }, this), currentPage === 'my_foods' && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(FoodForm, {\n        foodName: foodName,\n        setFoodName: setFoodName,\n        foodImage: foodImage,\n        setFoodImage: setFoodImage,\n        foodTags: foodTags,\n        setFoodTags: setFoodTags,\n        editingFoodId: editingFoodId,\n        handleAddOrUpdateFood: handleAddOrUpdateFood,\n        setEditingFoodId: setEditingFoodId,\n        showMessage: showMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(CategoryFilter, {\n        selectedCategory: selectedCategory,\n        setSelectedCategory: setSelectedCategory,\n        label: \"\\u0E01\\u0E23\\u0E2D\\u0E07\\u0E15\\u0E32\\u0E21\\u0E2B\\u0E21\\u0E27\\u0E14\\u0E2B\\u0E21\\u0E39\\u0E48:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(FoodList, {\n        filteredFoodItems: filteredFoodItems,\n        handleEditFood: handleEditFood,\n        handleDeleteFood: handleDeleteFood\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), currentPage === 'vote' && /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"max-w-6xl p-8 mx-auto mb-10 bg-white border border-teal-200 shadow-xl rounded-2xl\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"mb-6 text-3xl font-bold text-center text-teal-700\",\n        children: \"\\u0E40\\u0E21\\u0E19\\u0E39\\u0E1B\\u0E23\\u0E30\\u0E08\\u0E33\\u0E27\\u0E31\\u0E19\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 11\n      }, this), dailyMenu.status === 'voting' ? /*#__PURE__*/_jsxDEV(VotingSection, {\n        dailyMenu: dailyMenu,\n        userId: userId,\n        handleVote: handleVote\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(DailyWinner, {\n        winningFood: winningFood,\n        dailyMenuStatus: dailyMenu.status\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 336,\n      columnNumber: 9\n    }, this), currentPage === 'admin' && /*#__PURE__*/_jsxDEV(AdminDashboard, {\n      isAdmin: isAdmin,\n      adminPasswordInput: adminPasswordInput,\n      setAdminPasswordInput: setAdminPasswordInput,\n      handleAdminLogin: handleAdminLogin,\n      handleAdminLogout: handleAdminLogout,\n      foodItems: foodItems,\n      adminVoteSelections: adminVoteSelections,\n      setAdminVoteSelections: setAdminVoteSelections,\n      toggleAdminVoteSelection: toggleAdminVoteSelection,\n      handleStartVoting: handleStartVoting,\n      dailyMenu: dailyMenu // Pass the full dailyMenu object\n      ,\n      handleCloseVoting: handleCloseVoting,\n      adminDirectSelectFoodId: adminDirectSelectFoodId,\n      setAdminDirectSelectFoodId: setAdminDirectSelectFoodId,\n      handleAdminSetFood: handleAdminSetFood,\n      showMessage: showMessage,\n      selectedAdminCategory: selectedAdminCategory,\n      setSelectedAdminCategory: setSelectedAdminCategory\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 354,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 303,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"nuPHS1PcUybLBisI0ZmYFeSLWE8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Header","Navigation","MessageDisplay","FoodForm","FoodList","CategoryFilter","VotingSection","DailyWinner","AdminDashboard","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","currentPage","setCurrentPage","userId","setUserId","id","localStorage","getItem","crypto","randomUUID","setItem","isAdmin","setIsAdmin","adminPasswordInput","setAdminPasswordInput","ADMIN_PASSWORD","foodItems","setFoodItems","savedFoodItems","JSON","parse","name","image","tags","dailyMenu","setDailyMenu","savedDailyMenu","status","voteOptions","votedUsers","winningFoodItemId","adminSetFoodItemId","timestamp","foodName","setFoodName","foodImage","setFoodImage","foodTags","setFoodTags","editingFoodId","setEditingFoodId","adminVoteSelections","setAdminVoteSelections","adminDirectSelectFoodId","setAdminDirectSelectFoodId","selectedCategory","setSelectedCategory","selectedAdminCategory","setSelectedAdminCategory","message","setMessage","text","type","stringify","handleAddOrUpdateFood","e","preventDefault","trim","showMessage","tagsArray","split","map","tag","filter","item","newFoodItem","Date","now","toString","handleEditFood","foodToEdit","find","join","handleDeleteFood","window","confirm","handleAdminLogin","handleAdminLogout","toggleAdminVoteSelection","food","isSelected","some","length","handleStartVoting","foodItemId","votes","toISOString","handleCloseVoting","winningItem","reduce","prev","current","handleAdminSetFood","handleVote","updatedVoteOptions","option","setTimeout","getWinningFoodDetails","winningFood","filteredFoodItems","includes","className","children","fileName","_jsxFileName","lineNumber","columnNumber","label","dailyMenuStatus","_c","$RefreshReg$"],"sources":["C:/Users/Tiantian/my-project/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Header,\r\n  Navigation,\r\n  MessageDisplay,\r\n  FoodForm,\r\n  FoodList,\r\n  CategoryFilter,\r\n  VotingSection,\r\n  DailyWinner,\r\n  AdminDashboard,\r\n} from './components'; // Importing from the index.js barrel file\r\n\r\nconst App = () => {\r\n  // State for current page view: 'my_foods', 'vote', 'admin'\r\n  const [currentPage, setCurrentPage] = useState('my_foods');\r\n\r\n  // User ID for offline voting (persists per browser session)\r\n  const [userId, setUserId] = useState(() => {\r\n    let id = localStorage.getItem('offlineUserId');\r\n    if (!id) {\r\n      id = crypto.randomUUID();\r\n      localStorage.setItem('offlineUserId', id);\r\n    }\r\n    return id;\r\n  });\r\n\r\n  // Simple admin state for offline demo (not secure for real apps)\r\n  const [isAdmin, setIsAdmin] = useState(false);\r\n  const [adminPasswordInput, setAdminPasswordInput] = useState('');\r\n  const ADMIN_PASSWORD = 'admin'; // Hardcoded admin password for demo\r\n\r\n  // State to store the list of food items (user's private list)\r\n  const [foodItems, setFoodItems] = useState(() => {\r\n    const savedFoodItems = localStorage.getItem('thaiFoodMenu_foodItems');\r\n    return savedFoodItems ? JSON.parse(savedFoodItems) : [\r\n      { id: '1', name: 'ผัดไทย', image: 'https://placehold.co/400x300/FFD700/000000?text=Pad+Thai', tags: ['อาหารจานเดียว', 'เส้น', 'ยอดนิยม', 'ทั่วไป'] },\r\n      { id: '2', name: 'ต้มยำกุ้ง', image: 'https://placehold.co/400x300/FF6347/FFFFFF?text=Tom+Yum+Goong', tags: ['ซุป', 'เผ็ด', 'อาหารทะเล', 'ทั่วไป'] },\r\n      { id: '3', name: 'แกงเขียวหวาน', image: 'https://placehold.co/400x300/32CD32/FFFFFF?text=Green+Curry', tags: ['แกง', 'กะทิ', 'เผ็ดน้อย', 'ทั่วไป'] },\r\n      { id: '4', name: 'ข้าวผัด', image: 'https://placehold.co/400x300/87CEEB/000000?text=Fried+Rice', tags: ['อาหารจานเดียว', 'ข้าว', 'ง่ายๆ', 'ทั่วไป'] },\r\n      { id: '5', name: 'ส้มตำ', image: 'https://placehold.co/400x300/FF4500/FFFFFF?text=Som+Tum', tags: ['สลัด', 'เผ็ด', 'อีสาน', 'ทั่วไป'] },\r\n      { id: '6', name: 'มัสมั่นไก่', image: 'https://placehold.co/400x300/8B4513/FFFFFF?text=Massaman+Curry', tags: ['แกง', 'กะทิ', 'ไม่เผ็ด', 'ทั่วไป'] },\r\n      { id: '7', name: 'ราดหน้าหมู', image: 'https://placehold.co/400x300/90EE90/000000?text=Rad+Na+Moo', tags: ['อาหารจานเดียว', 'เส้น', 'อาหารราดหน้า'] },\r\n      { id: '8', name: 'ก๋วยเตี๋ยวเรือ', image: 'https://placehold.co/400x300/DDA0DD/FFFFFF?text=Boat+Noodle', tags: ['อาหารจานเดียว', 'เส้น'] },\r\n    ];\r\n  });\r\n\r\n  // State for the daily menu/voting status (public, stored in localStorage)\r\n  const [dailyMenu, setDailyMenu] = useState(() => {\r\n    const savedDailyMenu = localStorage.getItem('thaiFoodMenu_dailyMenu');\r\n    return savedDailyMenu ? JSON.parse(savedDailyMenu) : {\r\n      status: 'idle', // 'idle', 'voting', 'closed', 'admin_set'\r\n      voteOptions: [],\r\n      votedUsers: {}, // { userId: foodItemId }\r\n      winningFoodItemId: null,\r\n      adminSetFoodItemId: null,\r\n      timestamp: null,\r\n    };\r\n  });\r\n\r\n  // State for the form inputs (for adding/editing food items)\r\n  const [foodName, setFoodName] = useState('');\r\n  const [foodImage, setFoodImage] = useState('');\r\n  const [foodTags, setFoodTags] = useState('');\r\n  const [editingFoodId, setEditingFoodId] = useState(null);\r\n\r\n  // State for admin panel: selected items for voting (stores full food objects)\r\n  const [adminVoteSelections, setAdminVoteSelections] = useState([]);\r\n  const [adminDirectSelectFoodId, setAdminDirectSelectFoodId] = useState('');\r\n\r\n  // State for filtering food items in 'my_foods' page\r\n  const [selectedCategory, setSelectedCategory] = useState('ทั้งหมด'); // 'ทั้งหมด', 'อาหารราดหน้า', 'ทั่วไป', 'เส้น'\r\n  // State for filtering food items in 'admin' page\r\n  const [selectedAdminCategory, setSelectedAdminCategory] = useState('ทั้งหมด'); // 'ทั้งหมด', 'อาหารราดหน้า', 'ทั่วไป', 'เส้น'\r\n\r\n  // State for showing success/error messages\r\n  const [message, setMessage] = useState({ text: '', type: '' });\r\n\r\n  // --- Effects to save data to Local Storage ---\r\n  useEffect(() => {\r\n    localStorage.setItem('thaiFoodMenu_foodItems', JSON.stringify(foodItems));\r\n  }, [foodItems]);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('thaiFoodMenu_dailyMenu', JSON.stringify(dailyMenu));\r\n  }, [dailyMenu]);\r\n\r\n  // --- CRUD Operations for Food Items (using localStorage) ---\r\n  const handleAddOrUpdateFood = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!foodName.trim() || !foodImage.trim()) {\r\n      showMessage('กรุณากรอกชื่อและรูปภาพอาหาร', 'error');\r\n      return;\r\n    }\r\n\r\n    const tagsArray = foodTags.split(',').map(tag => tag.trim()).filter(tag => tag !== '');\r\n\r\n    if (editingFoodId) {\r\n      // Update existing food item\r\n      setFoodItems(foodItems.map(item =>\r\n        item.id === editingFoodId\r\n          ? { ...item, name: foodName, image: foodImage, tags: tagsArray }\r\n          : item\r\n      ));\r\n      showMessage('อัปเดตเมนูอาหารเรียบร้อยแล้ว!', 'success');\r\n      setEditingFoodId(null);\r\n    } else {\r\n      // Add new food item\r\n      const newFoodItem = {\r\n        id: Date.now().toString(), // Unique ID based on timestamp\r\n        name: foodName,\r\n        image: foodImage,\r\n        tags: tagsArray,\r\n      };\r\n      setFoodItems([...foodItems, newFoodItem]);\r\n      showMessage('เพิ่มเมนูอาหารเรียบร้อยแล้ว!', 'success');\r\n    }\r\n\r\n    // Clear form fields\r\n    setFoodName('');\r\n    setFoodImage('');\r\n    setFoodTags('');\r\n  };\r\n\r\n  const handleEditFood = (id) => {\r\n    const foodToEdit = foodItems.find(item => item.id === id);\r\n    if (foodToEdit) {\r\n      setFoodName(foodToEdit.name);\r\n      setFoodImage(foodToEdit.image);\r\n      setFoodTags(foodToEdit.tags.join(', '));\r\n      setEditingFoodId(id);\r\n      showMessage('กำลังแก้ไขเมนูอาหาร...', 'info');\r\n    }\r\n  };\r\n\r\n  const handleDeleteFood = (id) => {\r\n    if (window.confirm('คุณต้องการลบเมนูอาหารนี้หรือไม่?')) {\r\n      setFoodItems(foodItems.filter(item => item.id !== id));\r\n      showMessage('ลบเมนูอาหารเรียบร้อยแล้ว!', 'success');\r\n    }\r\n  };\r\n\r\n  // --- Admin Functions (using localStorage) ---\r\n  const handleAdminLogin = () => {\r\n    if (adminPasswordInput === ADMIN_PASSWORD) {\r\n      setIsAdmin(true);\r\n      showMessage('เข้าสู่ระบบแอดมินสำเร็จ!', 'success');\r\n    } else {\r\n      showMessage('รหัสผ่านแอดมินไม่ถูกต้อง', 'error');\r\n    }\r\n    setAdminPasswordInput('');\r\n  };\r\n\r\n  const handleAdminLogout = () => {\r\n    setIsAdmin(false);\r\n    showMessage('ออกจากระบบแอดมินแล้ว', 'info');\r\n  };\r\n\r\n  // Toggle selection for voting in admin panel\r\n  const toggleAdminVoteSelection = (food) => {\r\n    const isSelected = adminVoteSelections.some(item => item.id === food.id);\r\n    if (isSelected) {\r\n      setAdminVoteSelections(adminVoteSelections.filter(item => item.id !== food.id));\r\n    } else {\r\n      if (adminVoteSelections.length < 5) {\r\n        setAdminVoteSelections([...adminVoteSelections, food]);\r\n      } else {\r\n        showMessage('เลือกได้สูงสุด 5 เมนูสำหรับโหวตเท่านั้น', 'info');\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleStartVoting = () => {\r\n    if (adminVoteSelections.length !== 5) {\r\n      showMessage('ต้องเลือก 5 เมนูที่ไม่ซ้ำกันสำหรับโหวต', 'error');\r\n      return;\r\n    }\r\n\r\n    const voteOptions = adminVoteSelections.map(item => ({\r\n      foodItemId: item.id,\r\n      name: item.name,\r\n      image: item.image,\r\n      votes: 0,\r\n    }));\r\n\r\n    setDailyMenu({\r\n      status: 'voting',\r\n      voteOptions: voteOptions,\r\n      votedUsers: {}, // Reset voted users\r\n      winningFoodItemId: null,\r\n      adminSetFoodItemId: null,\r\n      timestamp: new Date().toISOString(),\r\n    });\r\n    showMessage('เริ่มการโหวตเมนูประจำวันแล้ว!', 'success');\r\n    setAdminVoteSelections([]); // Clear selected items after starting vote\r\n  };\r\n\r\n  const handleCloseVoting = () => {\r\n    if (dailyMenu.status !== 'voting') {\r\n      showMessage('ไม่ได้อยู่ในสถานะกำลังโหวต', 'error');\r\n      return;\r\n    }\r\n\r\n    let winningItem = null;\r\n    if (dailyMenu.voteOptions && dailyMenu.voteOptions.length > 0) {\r\n      winningItem = dailyMenu.voteOptions.reduce((prev, current) =>\r\n        (prev.votes > current.votes) ? prev : current\r\n      );\r\n    }\r\n\r\n    setDailyMenu(prev => ({\r\n      ...prev,\r\n      status: 'closed',\r\n      winningFoodItemId: winningItem ? winningItem.foodItemId : null,\r\n      timestamp: new Date().toISOString(),\r\n    }));\r\n    showMessage(`ปิดการโหวตแล้ว! เมนูที่ชนะคือ ${winningItem ? winningItem.name : 'ไม่มี'}`, 'success');\r\n  };\r\n\r\n  const handleAdminSetFood = () => {\r\n    if (!adminDirectSelectFoodId) {\r\n      showMessage('ต้องเลือกเมนู', 'error');\r\n      return;\r\n    }\r\n\r\n    setDailyMenu({\r\n      status: 'admin_set',\r\n      adminSetFoodItemId: adminDirectSelectFoodId,\r\n      winningFoodItemId: null,\r\n      voteOptions: [],\r\n      votedUsers: {},\r\n      timestamp: new Date().toISOString(),\r\n    });\r\n    showMessage('ตั้งค่าเมนูประจำวันโดยแอดมินเรียบร้อยแล้ว!', 'success');\r\n    setAdminDirectSelectFoodId('');\r\n  };\r\n\r\n  // --- User Voting Function (using localStorage) ---\r\n  const handleVote = (foodItemId) => {\r\n    if (dailyMenu.status !== 'voting') {\r\n      showMessage('ไม่สามารถโหวตได้ในขณะนี้', 'error');\r\n      return;\r\n    }\r\n\r\n    // Check if user has already voted\r\n    if (dailyMenu.votedUsers && dailyMenu.votedUsers[userId]) {\r\n      showMessage('คุณโหวตไปแล้วสำหรับวันนี้!', 'info');\r\n      return;\r\n    }\r\n\r\n    // Update the vote count for the selected item and mark user as voted\r\n    const updatedVoteOptions = dailyMenu.voteOptions.map(option =>\r\n      option.foodItemId === foodItemId\r\n        ? { ...option, votes: option.votes + 1 }\r\n        : option\r\n    );\r\n\r\n    setDailyMenu(prev => ({\r\n      ...prev,\r\n      voteOptions: updatedVoteOptions,\r\n      votedUsers: {\r\n        ...prev.votedUsers,\r\n        [userId]: foodItemId, // Mark user as voted for this item\r\n      },\r\n      timestamp: new Date().toISOString(),\r\n    }));\r\n    showMessage('โหวตสำเร็จ!', 'success');\r\n  };\r\n\r\n  // Function to display messages\r\n  const showMessage = (text, type) => {\r\n    setMessage({ text, type });\r\n    setTimeout(() => {\r\n      setMessage({ text: '', type: '' }); // Clear message after 3 seconds\r\n    }, 3000);\r\n  };\r\n\r\n  // Get winning food item details for display\r\n  const getWinningFoodDetails = () => {\r\n    if (!dailyMenu) return null;\r\n\r\n    if (dailyMenu.status === 'closed' && dailyMenu.winningFoodItemId) {\r\n      return foodItems.find(item => item.id === dailyMenu.winningFoodItemId) ||\r\n             dailyMenu.voteOptions.find(option => option.foodItemId === dailyMenu.winningFoodItemId);\r\n    } else if (dailyMenu.status === 'admin_set' && dailyMenu.adminSetFoodItemId) {\r\n      return foodItems.find(item => item.id === dailyMenu.adminSetFoodItemId);\r\n    }\r\n    return null;\r\n  };\r\n\r\n  const winningFood = getWinningFoodDetails();\r\n\r\n  // Filtered food items for 'my_foods' section\r\n  const filteredFoodItems = foodItems.filter(food => {\r\n    if (selectedCategory === 'ทั้งหมด') {\r\n      return true;\r\n    }\r\n    return food.tags.includes(selectedCategory);\r\n  });\r\n\r\n  return (\r\n    <div className=\"min-h-screen p-4 text-gray-800 bg-gradient-to-br from-emerald-50 to-teal-100 font-inter\">\r\n      <Header userId={userId} />\r\n      <MessageDisplay message={message} />\r\n      <Navigation currentPage={currentPage} setCurrentPage={setCurrentPage} />\r\n\r\n      {currentPage === 'my_foods' && (\r\n        <>\r\n          <FoodForm\r\n            foodName={foodName}\r\n            setFoodName={setFoodName}\r\n            foodImage={foodImage}\r\n            setFoodImage={setFoodImage}\r\n            foodTags={foodTags}\r\n            setFoodTags={setFoodTags}\r\n            editingFoodId={editingFoodId}\r\n            handleAddOrUpdateFood={handleAddOrUpdateFood}\r\n            setEditingFoodId={setEditingFoodId}\r\n            showMessage={showMessage}\r\n          />\r\n          <CategoryFilter\r\n            selectedCategory={selectedCategory}\r\n            setSelectedCategory={setSelectedCategory}\r\n            label=\"กรองตามหมวดหมู่:\"\r\n          />\r\n          <FoodList\r\n            filteredFoodItems={filteredFoodItems}\r\n            handleEditFood={handleEditFood}\r\n            handleDeleteFood={handleDeleteFood}\r\n          />\r\n        </>\r\n      )}\r\n\r\n      {currentPage === 'vote' && (\r\n        <section className=\"max-w-6xl p-8 mx-auto mb-10 bg-white border border-teal-200 shadow-xl rounded-2xl\">\r\n          <h2 className=\"mb-6 text-3xl font-bold text-center text-teal-700\">เมนูประจำวัน</h2>\r\n          {dailyMenu.status === 'voting' ? (\r\n            <VotingSection\r\n              dailyMenu={dailyMenu}\r\n              userId={userId}\r\n              handleVote={handleVote}\r\n            />\r\n          ) : (\r\n            <DailyWinner\r\n              winningFood={winningFood}\r\n              dailyMenuStatus={dailyMenu.status}\r\n            />\r\n          )}\r\n        </section>\r\n      )}\r\n\r\n      {currentPage === 'admin' && (\r\n        <AdminDashboard\r\n          isAdmin={isAdmin}\r\n          adminPasswordInput={adminPasswordInput}\r\n          setAdminPasswordInput={setAdminPasswordInput}\r\n          handleAdminLogin={handleAdminLogin}\r\n          handleAdminLogout={handleAdminLogout}\r\n          foodItems={foodItems}\r\n          adminVoteSelections={adminVoteSelections}\r\n          setAdminVoteSelections={setAdminVoteSelections}\r\n          toggleAdminVoteSelection={toggleAdminVoteSelection}\r\n          handleStartVoting={handleStartVoting}\r\n          dailyMenu={dailyMenu} // Pass the full dailyMenu object\r\n          handleCloseVoting={handleCloseVoting}\r\n          adminDirectSelectFoodId={adminDirectSelectFoodId}\r\n          setAdminDirectSelectFoodId={setAdminDirectSelectFoodId}\r\n          handleAdminSetFood={handleAdminSetFood}\r\n          showMessage={showMessage}\r\n          selectedAdminCategory={selectedAdminCategory}\r\n          setSelectedAdminCategory={setSelectedAdminCategory}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}